import express from "express";
import cors from "cors";
import { AppDataSource } from "./data-source";
import { Task } from "./entity/Task";

const app = express();
app.use(cors());
app.use(express.json());

AppDataSource.initialize()
  .then(() => {
    const taskRepository = AppDataSource.getRepository(Task);

    // GET /tasks - Fetch all tasks
    app.get("/tasks", async (_, res) => {
      const tasks = await taskRepository.find();
      res.json(tasks);
    });

    // POST /tasks - Create a new task
    app.post("/tasks", async (req, res) => {
      const { title, description, status, dueDate } = req.body;

      if (!title || !status) {
        return res.status(400).json({ error: "Title and status are required" });
      }

      const newTask = taskRepository.create({
        title,
        description,
        status,
        dueDate,
      });

      const result = await taskRepository.save(newTask);
      res.status(201).json(result);
    });

    // PUT /tasks/:id - Update a task
    app.put("/tasks/:id", async (req, res) => {
      const { id } = req.params;
      const task = await taskRepository.findOneBy({ id });

      if (!task) {
        return res.status(404).json({ error: "Task not found" });
      }

      Object.assign(task, req.body);
      const result = await taskRepository.save(task);
      res.json(result);
    });

    // DELETE /tasks/:id - Delete a task
    app.delete("/tasks/:id", async (req, res) => {
      const { id } = req.params;
      const result = await taskRepository.delete({ id });

      if (result.affected === 0) {
        return res.status(404).json({ error: "Task not found" });
      }

      res.status(204).send();
    });

    const PORT = process.env.PORT || 3001;
    app.listen(PORT, () => {
      console.log(`🚀 Backend running on http://localhost:${PORT}`);
    });
  })
  .catch((err) => {
    console.error("❌ Failed to initialize data source", err);
  });
